import{c as p}from"./chunk-APL5VXGX.js";import{a as b}from"./chunk-OEW7T7QN.js";import{a as y}from"./chunk-K776FSIA.js";import"./chunk-VYVOHQNH.js";import{h as T,j as v}from"./chunk-7GI4CMUR.js";import{A as n,C as O,H as l,I as H,e as _,f as g,h as i,i as x,j as E,l as z,m,s,t as L,z as C}from"./chunk-DNMECVE7.js";var V=_(O(),1);var h=class extends l("Opus"){},u=class{constructor(e){if(this.len=e,e<19)throw new h("ID-header-page 0 should be at least 19 bytes long")}get(e,t){return{magicSignature:new n(8,"ascii").get(e,t+0),version:i.get(e,t+8),channelCount:i.get(e,t+9),preSkip:x.get(e,t+10),inputSampleRate:m.get(e,t+12),outputGain:x.get(e,t+16),channelMapping:i.get(e,t+18)}}};var I=class extends p{constructor(e,t,r){super(e,t),this.tokenizer=r,this.idHeader=null,this.lastPos=-1}parseFirstPage(e,t){if(this.metadata.setFormat("codec","Opus"),this.idHeader=new u(t.length).get(t,0),this.idHeader.magicSignature!=="OpusHead")throw new h("Illegal ogg/Opus magic-signature");this.metadata.setFormat("sampleRate",this.idHeader.inputSampleRate),this.metadata.setFormat("numberOfChannels",this.idHeader.channelCount)}parseFullPage(e){return g(this,null,function*(){switch(new n(8,"ascii").get(e,0)){case"OpusTags":yield this.parseUserCommentList(e,8),this.lastPos=this.tokenizer.position-e.length;break;default:break}})}calculateDuration(e){if(this.metadata.format.sampleRate&&e.absoluteGranulePosition>=0){let t=e.absoluteGranulePosition-this.idHeader.preSkip;if(this.metadata.setFormat("numberOfSamples",t),this.metadata.setFormat("duration",t/48e3),this.lastPos!==-1&&this.tokenizer.fileInfo.size&&this.metadata.format.duration){let r=this.tokenizer.fileInfo.size-this.lastPos;this.metadata.setFormat("bitrate",8*r/this.metadata.format.duration)}}}};var D=_(O(),1);var G={len:80,get:(a,e)=>({speex:new n(8,"ascii").get(a,e+0),version:v(new n(20,"ascii").get(a,e+8)),version_id:s.get(a,e+28),header_size:s.get(a,e+32),rate:s.get(a,e+36),mode:s.get(a,e+40),mode_bitstream_version:s.get(a,e+44),nb_channels:s.get(a,e+48),bitrate:s.get(a,e+52),frame_size:s.get(a,e+56),vbr:s.get(a,e+60),frames_per_packet:s.get(a,e+64),extra_headers:s.get(a,e+68),reserved1:s.get(a,e+72),reserved2:s.get(a,e+76)})};var j=(0,D.default)("music-metadata:parser:ogg:speex"),N=class extends p{constructor(e,t,r){super(e,t),this.tokenizer=r}parseFirstPage(e,t){j("First Ogg/Speex page");let r=G.get(t,0);this.metadata.setFormat("codec",`Speex ${r.version}`),this.metadata.setFormat("numberOfChannels",r.nb_channels),this.metadata.setFormat("sampleRate",r.rate),r.bitrate!==-1&&this.metadata.setFormat("bitrate",r.bitrate)}};var R=_(O(),1);var B={len:42,get:(a,e)=>({id:new n(7,"ascii").get(a,e),vmaj:i.get(a,e+7),vmin:i.get(a,e+8),vrev:i.get(a,e+9),vmbw:E.get(a,e+10),vmbh:E.get(a,e+17),nombr:z.get(a,e+37),nqual:i.get(a,e+40)})};var F=(0,R.default)("music-metadata:parser:ogg:theora"),w=class{constructor(e,t,r){this.metadata=e,this.tokenizer=r}parsePage(e,t){return g(this,null,function*(){e.headerType.firstPage&&(yield this.parseFirstPage(e,t))})}flush(){return g(this,null,function*(){F("flush")})}calculateDuration(e){F("duration calculation not implemented")}parseFirstPage(e,t){return g(this,null,function*(){F("First Ogg/Theora page"),this.metadata.setFormat("codec","Theora");let r=B.get(t,0);this.metadata.setFormat("bitrate",r.nombr)})}};var P=class extends l("Ogg"){},o=(0,V.default)("music-metadata:parser:ogg"),U=class a{static sum(e,t,r){let c=new DataView(e.buffer,0),d=0;for(let S=t;S<t+r;++S)d+=c.getUint8(S);return d}constructor(e){this.len=e.page_segments}get(e,t){return{totalPageSize:a.sum(e,t,this.len)}}},pe=(()=>{class a extends H{constructor(){super(...arguments),this.header=null,this.pageNumber=0,this.pageConsumer=null}parse(){return g(this,null,function*(){o("pos=%s, parsePage()",this.tokenizer.position);try{let t;do{if(t=yield this.tokenizer.readToken(a.Header),t.capturePattern!=="OggS")throw new P("Invalid Ogg capture pattern");this.metadata.setFormat("container","Ogg"),this.header=t,this.pageNumber=t.pageSequenceNo,o("page#=%s, Ogg.id=%s",t.pageSequenceNo,t.capturePattern);let r=yield this.tokenizer.readToken(new U(t));o("totalPageSize=%s",r.totalPageSize);let c=yield this.tokenizer.readToken(new C(r.totalPageSize));if(o("firstPage=%s, lastPage=%s, continued=%s",t.headerType.firstPage,t.headerType.lastPage,t.headerType.continued),t.headerType.firstPage){let d=new TextDecoder("ascii").decode(c.subarray(0,7));switch(d){case"vorbis":o("Set page consumer to Ogg/Vorbis"),this.pageConsumer=new p(this.metadata,this.options);break;case"OpusHea":o("Set page consumer to Ogg/Opus"),this.pageConsumer=new I(this.metadata,this.options,this.tokenizer);break;case"Speex  ":o("Set page consumer to Ogg/Speex"),this.pageConsumer=new N(this.metadata,this.options,this.tokenizer);break;case"fishead":case"\0theora":o("Set page consumer to Ogg/Theora"),this.pageConsumer=new w(this.metadata,this.options,this.tokenizer);break;default:throw new P(`gg audio-codec not recognized (id=${d})`)}}yield this.pageConsumer.parsePage(t,c)}while(!t.headerType.lastPage)}catch(t){if(t instanceof Error)t instanceof y?(this.metadata.addWarning("Last OGG-page is not marked with last-page flag"),o("End-of-stream"),this.metadata.addWarning("Last OGG-page is not marked with last-page flag"),this.header&&this.pageConsumer.calculateDuration(this.header)):t.message.startsWith("FourCC")&&this.pageNumber>0&&(this.metadata.addWarning("Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag"),yield this.pageConsumer.flush());else throw t}})}}return a.Header={len:27,get:(e,t)=>({capturePattern:b.get(e,t),version:i.get(e,t+4),headerType:{continued:T(e,t+5,0),firstPage:T(e,t+5,1),lastPage:T(e,t+5,2)},absoluteGranulePosition:Number(L.get(e,t+6)),streamSerialNumber:m.get(e,t+14),pageSequenceNo:m.get(e,t+18),pageChecksum:m.get(e,t+22),page_segments:i.get(e,t+26)})},a})();export{P as OggContentError,pe as OggParser,U as SegmentTable};
