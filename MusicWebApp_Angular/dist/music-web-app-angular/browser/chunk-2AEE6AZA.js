import{a as z,b as N}from"./chunk-XH55ZYNT.js";import{a as S}from"./chunk-K776FSIA.js";import{A as T,C as $,H as F,I as U,e as y,f as l,h as w,v as I,x as E,y as v}from"./chunk-DNMECVE7.js";var C=y($(),1);var e=function(a){return a[a.string=0]="string",a[a.uint=1]="uint",a[a.uid=2]="uid",a[a.bool=3]="bool",a[a.binary=4]="binary",a[a.float=5]="float",a}(e||{});var D={name:"dtd",container:{440786851:{name:"ebml",container:{17030:{name:"ebmlVersion",value:e.uint},17143:{name:"ebmlReadVersion",value:e.uint},17138:{name:"ebmlMaxIDWidth",value:e.uint},17139:{name:"ebmlMaxSizeWidth",value:e.uint},17026:{name:"docType",value:e.string},17031:{name:"docTypeVersion",value:e.uint},17029:{name:"docTypeReadVersion",value:e.uint}}},408125543:{name:"segment",container:{290298740:{name:"seekHead",container:{19899:{name:"seek",multiple:!0,container:{21419:{name:"id",value:e.binary},21420:{name:"position",value:e.uint}}}}},357149030:{name:"info",container:{29604:{name:"uid",value:e.uid},29572:{name:"filename",value:e.string},3979555:{name:"prevUID",value:e.uid},3965867:{name:"prevFilename",value:e.string},4110627:{name:"nextUID",value:e.uid},4096955:{name:"nextFilename",value:e.string},2807729:{name:"timecodeScale",value:e.uint},17545:{name:"duration",value:e.float},17505:{name:"dateUTC",value:e.uint},31657:{name:"title",value:e.string},19840:{name:"muxingApp",value:e.string},22337:{name:"writingApp",value:e.string}}},524531317:{name:"cluster",multiple:!0,container:{231:{name:"timecode",value:e.uid},22743:{name:"silentTracks ",multiple:!0},167:{name:"position",value:e.uid},171:{name:"prevSize",value:e.uid},160:{name:"blockGroup"},163:{name:"simpleBlock"}}},374648427:{name:"tracks",container:{174:{name:"entries",multiple:!0,container:{215:{name:"trackNumber",value:e.uint},29637:{name:"uid",value:e.uid},131:{name:"trackType",value:e.uint},185:{name:"flagEnabled",value:e.bool},136:{name:"flagDefault",value:e.bool},21930:{name:"flagForced",value:e.bool},156:{name:"flagLacing",value:e.bool},28135:{name:"minCache",value:e.uint},28136:{name:"maxCache",value:e.uint},2352003:{name:"defaultDuration",value:e.uint},2306383:{name:"timecodeScale",value:e.float},21358:{name:"name",value:e.string},2274716:{name:"language",value:e.string},134:{name:"codecID",value:e.string},25506:{name:"codecPrivate",value:e.binary},2459272:{name:"codecName",value:e.string},3839639:{name:"codecSettings",value:e.string},3883072:{name:"codecInfoUrl",value:e.string},2536e3:{name:"codecDownloadUrl",value:e.string},170:{name:"codecDecodeAll",value:e.bool},28587:{name:"trackOverlay",value:e.uint},224:{name:"video",container:{154:{name:"flagInterlaced",value:e.bool},21432:{name:"stereoMode",value:e.uint},176:{name:"pixelWidth",value:e.uint},186:{name:"pixelHeight",value:e.uint},21680:{name:"displayWidth",value:e.uint},21690:{name:"displayHeight",value:e.uint},21683:{name:"aspectRatioType",value:e.uint},3061028:{name:"colourSpace",value:e.uint},3126563:{name:"gammaValue",value:e.float}}},225:{name:"audio",container:{181:{name:"samplingFrequency",value:e.float},30901:{name:"outputSamplingFrequency",value:e.float},159:{name:"channels",value:e.uint},148:{name:"channels",value:e.uint},32123:{name:"channelPositions",value:e.binary},25188:{name:"bitDepth",value:e.uint}}},28032:{name:"contentEncodings",container:{25152:{name:"contentEncoding",container:{20529:{name:"order",value:e.uint},20530:{name:"scope",value:e.bool},20531:{name:"type",value:e.uint},20532:{name:"contentEncoding",container:{16980:{name:"contentCompAlgo",value:e.uint},16981:{name:"contentCompSettings",value:e.binary}}},20533:{name:"contentEncoding",container:{18401:{name:"contentEncAlgo",value:e.uint},18402:{name:"contentEncKeyID",value:e.binary},18403:{name:"contentSignature ",value:e.binary},18404:{name:"ContentSigKeyID  ",value:e.binary},18405:{name:"contentSigAlgo ",value:e.uint},18406:{name:"contentSigHashAlgo ",value:e.uint}}},25188:{name:"bitDepth",value:e.uint}}}}}}}}},475249515:{name:"cues",container:{187:{name:"cuePoint",container:{179:{name:"cueTime",value:e.uid},183:{name:"positions",container:{247:{name:"track",value:e.uint},241:{name:"clusterPosition",value:e.uint},21368:{name:"blockNumber",value:e.uint},234:{name:"codecState",value:e.uint},219:{name:"reference",container:{150:{name:"time",value:e.uint},151:{name:"cluster",value:e.uint},21343:{name:"number",value:e.uint},235:{name:"codecState",value:e.uint}}},240:{name:"relativePosition",value:e.uint}}}}}}},423732329:{name:"attachments",container:{24999:{name:"attachedFiles",multiple:!0,container:{18046:{name:"description",value:e.string},18030:{name:"name",value:e.string},18016:{name:"mimeType",value:e.string},18012:{name:"data",value:e.binary},18094:{name:"uid",value:e.uid}}}}},272869232:{name:"chapters",container:{17849:{name:"editionEntry",container:{182:{name:"chapterAtom",container:{29636:{name:"uid",value:e.uid},145:{name:"timeStart",value:e.uint},146:{name:"timeEnd",value:e.uid},152:{name:"hidden",value:e.bool},17816:{name:"enabled",value:e.uid},143:{name:"track",container:{137:{name:"trackNumber",value:e.uid},128:{name:"display",container:{133:{name:"string",value:e.string},17276:{name:"language ",value:e.string},17278:{name:"country ",value:e.string}}}}}}}}}}},307544935:{name:"tags",container:{29555:{name:"tag",multiple:!0,container:{25536:{name:"target",container:{25541:{name:"tagTrackUID",value:e.uid},25540:{name:"tagChapterUID",value:e.uint},25542:{name:"tagAttachmentUID",value:e.uid},25546:{name:"targetType",value:e.string},26826:{name:"targetTypeValue",value:e.uint},25545:{name:"tagEditionUID",value:e.uid}}},26568:{name:"simpleTags",multiple:!0,container:{17827:{name:"name",value:e.string},17543:{name:"string",value:e.string},17541:{name:"binary",value:e.binary},17530:{name:"language",value:e.string},17531:{name:"languageIETF",value:e.string},17540:{name:"default",value:e.bool}}}}}}}}}}};var M=y($(),1);var p=(0,M.default)("music-metadata:parser:ebml"),b=class extends F("EBML"){},d=function(a){return a[a.ReadNext=0]="ReadNext",a[a.IgnoreElement=2]="IgnoreElement",a[a.SkipSiblings=3]="SkipSiblings",a[a.TerminateParsing=4]="TerminateParsing",a[a.SkipElement=5]="SkipElement",a}(d||{}),f=class{constructor(n){this.tokenizer=n,this.padding=0,this.parserMap=new Map,this.ebmlMaxIDLength=4,this.ebmlMaxSizeLength=8,this.parserMap.set(e.uint,i=>this.readUint(i)),this.parserMap.set(e.string,i=>this.readString(i)),this.parserMap.set(e.binary,i=>this.readBuffer(i)),this.parserMap.set(e.uid,i=>l(this,null,function*(){return this.readBuffer(i)})),this.parserMap.set(e.bool,i=>this.readFlag(i)),this.parserMap.set(e.float,i=>this.readFloat(i))}iterate(n,i,u){return l(this,null,function*(){return this.parseContainer(B(n),i,u)})}parseContainer(n,i,u){return l(this,null,function*(){let s={};for(;this.tokenizer.position<i;){let r,m=this.tokenizer.position;try{r=yield this.readElement()}catch(o){if(o instanceof S)break;throw o}let t=n.container[r.id];if(t)switch(u.startNext(t)){case d.ReadNext:if(r.id,p(`Read element: name=${g(t)}{id=0x${r.id.toString(16)}, container=${!!t.container}} at position=${m}`),t.container){let c=yield this.parseContainer(t,r.len>=0?this.tokenizer.position+r.len:-1,u);t.multiple?(s[t.name]||(s[t.name]=[]),s[t.name].push(c)):s[t.name]=c,yield u.elementValue(t,c,m)}else{let c=this.parserMap.get(t.value);if(typeof c=="function"){let x=yield c(r);s[t.name]=x,yield u.elementValue(t,x,m)}}break;case d.SkipElement:p(`Go to next element: name=${g(t)}, element.id=0x${r.id}, container=${!!t.container} at position=${m}`);break;case d.IgnoreElement:p(`Ignore element: name=${g(t)}, element.id=0x${r.id}, container=${!!t.container} at position=${m}`),yield this.tokenizer.ignore(r.len);break;case d.SkipSiblings:p(`Ignore remaining container, at: name=${g(t)}, element.id=0x${r.id}, container=${!!t.container} at position=${m}`),yield this.tokenizer.ignore(i-this.tokenizer.position);break;case d.TerminateParsing:return p(`Terminate parsing at element: name=${g(t)}, element.id=0x${r.id}, container=${!!t.container} at position=${m}`),s}else switch(r.id){case 236:this.padding+=r.len,yield this.tokenizer.ignore(r.len);break;default:p(`parseEbml: parent=${g(n)}, unknown child: id=${r.id.toString(16)} at position=${m}`),this.padding+=r.len,yield this.tokenizer.ignore(r.len)}}return s})}readVintData(n){return l(this,null,function*(){let i=yield this.tokenizer.peekNumber(w),u=128,s=1;for(;!(i&u);){if(s>n)throw new b("VINT value exceeding maximum size");++s,u>>=1}let r=new Uint8Array(s);return yield this.tokenizer.readBuffer(r),r})}readElement(){return l(this,null,function*(){let n=yield this.readVintData(this.ebmlMaxIDLength),i=yield this.readVintData(this.ebmlMaxSizeLength);return i[0]^=128>>i.length-1,{id:k(n,n.length),len:k(i,i.length)}})}readFloat(n){return l(this,null,function*(){switch(n.len){case 0:return 0;case 4:return this.tokenizer.readNumber(E);case 8:return this.tokenizer.readNumber(v);case 10:return this.tokenizer.readNumber(v);default:throw new b(`Invalid IEEE-754 float length: ${n.len}`)}})}readFlag(n){return l(this,null,function*(){return(yield this.readUint(n))===1})}readUint(n){return l(this,null,function*(){let i=yield this.readBuffer(n);return k(i,n.len)})}readString(n){return l(this,null,function*(){return(yield this.tokenizer.readToken(new T(n.len,"utf-8"))).replace(/\x00.*$/g,"")})}readBuffer(n){return l(this,null,function*(){let i=new Uint8Array(n.len);return yield this.tokenizer.readBuffer(i),i})}};function k(a,n){return Number(R(a,n))}function R(a,n){let i=new Uint8Array(8),u=a.subarray(0,n);try{return i.set(u,8-n),I.get(i,0)}catch{return BigInt(-1)}}function B(a){return a.container&&Object.keys(a.container).map(n=>{let i=a.container[n];return i.id=Number.parseInt(n),i}).forEach(n=>{n.parent=a,B(n)}),a}function g(a){let n="";return a.parent&&a.parent.name!=="dtd"&&(n+=`${g(a.parent)}/`),n+a.name}var h=(0,C.default)("music-metadata:parser:matroska"),V=class extends U{constructor(){super(...arguments),this.seekHeadOffset=0,this.flagUseIndexToSkipClusters=this.options.mkvUseIndex??!1}parse(){return l(this,null,function*(){let n=this.tokenizer.fileInfo.size??Number.MAX_SAFE_INTEGER,i=new f(this.tokenizer);h("Initializing DTD end MatroskaIterator"),yield i.iterate(D,n,{startNext:u=>{switch(u.id){case 475249515:return h(`Skip element: name=${u.name}, id=0x${u.id.toString(16)}`),d.IgnoreElement;case 524531317:if(this.flagUseIndexToSkipClusters&&this.seekHead){let s=this.seekHead.seek.find(r=>r.position+this.seekHeadOffset>this.tokenizer.position);if(s){let r=s.position+this.seekHeadOffset-this.tokenizer.position;return h(`Use index to go to next position, ignoring ${r} bytes`),this.tokenizer.ignore(r),d.SkipElement}}return d.IgnoreElement;default:return d.ReadNext}},elementValue:(u,s,r)=>l(this,null,function*(){switch(h(`Received: name=${u.name}, value=${s}`),u.id){case 17026:this.metadata.setFormat("container",`EBML/${s}`);break;case 290298740:this.seekHead=s,this.seekHeadOffset=r;break;case 357149030:{let m=s,t=m.timecodeScale?m.timecodeScale:1e6;if(typeof m.duration=="number"){let o=m.duration*t/1e9;yield this.addTag("segment:title",m.title),this.metadata.setFormat("duration",Number(o))}}break;case 374648427:{let m=s;if(m?.entries){m.entries.forEach(o=>{let c={codecName:o.codecID.replace("A_","").replace("V_",""),codecSettings:o.codecSettings,flagDefault:o.flagDefault,flagLacing:o.flagLacing,flagEnabled:o.flagEnabled,language:o.language,name:o.name,type:o.trackType,audio:o.audio,video:o.video};this.metadata.addStreamInfo(c)});let t=m.entries.filter(o=>o.trackType===N.audio).reduce((o,c)=>!o||c.flagDefault&&!o.flagDefault||c.trackNumber<o.trackNumber?c:o,null);t&&(this.metadata.setFormat("codec",t.codecID.replace("A_","")),this.metadata.setFormat("sampleRate",t.audio.samplingFrequency),this.metadata.setFormat("numberOfChannels",t.audio.channels))}}break;case 307544935:{let m=s;yield Promise.all(m.tag.map(t=>l(this,null,function*(){let o=t.target,c=o?.targetTypeValue?z[o.targetTypeValue]:o?.targetType?o.targetType:"track";yield Promise.all(t.simpleTags.map(x=>l(this,null,function*(){let H=x.string?x.string:x.binary;yield this.addTag(`${c}:${x.name}`,H)})))})))}break;case 423732329:{let m=s;yield Promise.all(m.attachedFiles.filter(t=>t.mimeType.startsWith("image/")).map(t=>this.addTag("picture",{data:t.data,format:t.mimeType,description:t.description,name:t.name})))}break}})})})}addTag(n,i){return l(this,null,function*(){yield this.metadata.addTag("matroska",n,i)})}};export{V as MatroskaParser};
