import{b as k}from"./chunk-P4BZCRG7.js";import{j as d}from"./chunk-7GI4CMUR.js";import{A as h,C as w,I as p,e as P,f as n,h as s}from"./chunk-DNMECVE7.js";var R=P(w(),1);var l=(0,R.default)("music-metadata:parser:ID3v1"),g=["Blues","Classic Rock","Country","Dance","Disco","Funk","Grunge","Hip-Hop","Jazz","Metal","New Age","Oldies","Other","Pop","R&B","Rap","Reggae","Rock","Techno","Industrial","Alternative","Ska","Death Metal","Pranks","Soundtrack","Euro-Techno","Ambient","Trip-Hop","Vocal","Jazz+Funk","Fusion","Trance","Classical","Instrumental","Acid","House","Game","Sound Clip","Gospel","Noise","Alt. Rock","Bass","Soul","Punk","Space","Meditative","Instrumental Pop","Instrumental Rock","Ethnic","Gothic","Darkwave","Techno-Industrial","Electronic","Pop-Folk","Eurodance","Dream","Southern Rock","Comedy","Cult","Gangsta Rap","Top 40","Christian Rap","Pop/Funk","Jungle","Native American","Cabaret","New Wave","Psychedelic","Rave","Showtunes","Trailer","Lo-Fi","Tribal","Acid Punk","Acid Jazz","Polka","Retro","Musical","Rock & Roll","Hard Rock","Folk","Folk/Rock","National Folk","Swing","Fast-Fusion","Bebob","Latin","Revival","Celtic","Bluegrass","Avantgarde","Gothic Rock","Progressive Rock","Psychedelic Rock","Symphonic Rock","Slow Rock","Big Band","Chorus","Easy Listening","Acoustic","Humour","Speech","Chanson","Opera","Chamber Music","Sonata","Symphony","Booty Bass","Primus","Porn Groove","Satire","Slow Jam","Club","Tango","Samba","Folklore","Ballad","Power Ballad","Rhythmic Soul","Freestyle","Duet","Punk Rock","Drum Solo","A Cappella","Euro-House","Dance Hall","Goa","Drum & Bass","Club-House","Hardcore","Terror","Indie","BritPop","Negerpunk","Polsk Punk","Beat","Christian Gangsta Rap","Heavy Metal","Black Metal","Crossover","Contemporary Christian","Christian Rock","Merengue","Salsa","Thrash Metal","Anime","JPop","Synthpop","Abstract","Art Rock","Baroque","Bhangra","Big Beat","Breakbeat","Chillout","Downtempo","Dub","EBM","Eclectic","Electro","Electroclash","Emo","Experimental","Garage","Global","IDM","Illbient","Industro-Goth","Jam Band","Krautrock","Leftfield","Lounge","Math Rock","New Romantic","Nu-Breakz","Post-Punk","Post-Rock","Psytrance","Shoegaze","Space Rock","Trop Rock","World Music","Neoclassical","Audiobook","Audio Theatre","Neue Deutsche Welle","Podcast","Indie Rock","G-Funk","Dubstep","Garage Rock","Psybient"],c={len:128,get:(t,e)=>{let a=new i(3).get(t,e);return a==="TAG"?{header:a,title:new i(30).get(t,e+3),artist:new i(30).get(t,e+33),album:new i(30).get(t,e+63),year:new i(4).get(t,e+93),comment:new i(28).get(t,e+97),zeroByte:s.get(t,e+127),track:s.get(t,e+126),genre:s.get(t,e+127)}:null}},i=class{constructor(e){this.len=e,this.stringType=new h(e,"latin1")}get(e,a){let o=this.stringType.get(e,a);return o=d(o),o=o.trim(),o.length>0?o:void 0}},m=class t extends p{constructor(e,a,o){super(e,a,o),this.apeHeader=o.apeHeader}static getGenre(e){if(e<g.length)return g[e]}parse(){return n(this,null,function*(){if(!this.tokenizer.fileInfo.size){l("Skip checking for ID3v1 because the file-size is unknown");return}this.apeHeader&&(this.tokenizer.ignore(this.apeHeader.offset-this.tokenizer.position),yield new k(this.metadata,this.tokenizer,this.options).parseTags(this.apeHeader.footer));let e=this.tokenizer.fileInfo.size-c.len;if(this.tokenizer.position>e){l("Already consumed the last 128 bytes");return}let a=yield this.tokenizer.readToken(c,e);if(a){l("ID3v1 header found at: pos=%s",this.tokenizer.fileInfo.size-c.len);let o=["title","artist","album","comment","track","year"];for(let r of o)a[r]&&a[r]!==""&&(yield this.addTag(r,a[r]));let u=t.getGenre(a.genre);u&&(yield this.addTag("genre",u))}else l("ID3v1 header not found at: pos=%s",this.tokenizer.fileInfo.size-c.len)})}addTag(e,a){return n(this,null,function*(){yield this.metadata.addTag("ID3v1",e,a)})}};function z(t){return n(this,null,function*(){if(t.fileInfo.size>=128){let e=new Uint8Array(3),a=t.position;return yield t.readBuffer(e,{position:t.fileInfo.size-128}),t.setPosition(a),new TextDecoder("latin1").decode(e)==="TAG"}return!1})}export{g as a,m as b,z as c};
